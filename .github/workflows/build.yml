name: Build

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
  push:
    # Build for the master branch.
    branches:
      - master
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build [default: latest master; examples: v0.4.0, 9595da7d83efc330ca0bc94bef482e4edfbcf8fd]'
        required: false
        default: ''
      deploy:
        description: 'Deploy to production [default: false; examples: true, false]'
        required: false
        default: 'false'

jobs:
  build_release:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          # Allows to fetch all history for all branches and tags. Need this for proper versioning.
          fetch-depth: 0

      - name: Build
        run: make release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ./send.fs.neo.org-*.tar.gz
          if-no-files-found: error

      - name: Attach binary to the release as an asset
        if: ${{ github.event_name == 'release' }}
        run: gh release upload ${{ github.event.release.tag_name }} ./send.fs.neo.org-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NeoFS
        if: ${{ github.event_name == 'release' || github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true') }}
        uses: nspcc-dev/gh-push-to-neofs@master
        with:
          NEOFS_WALLET: ${{ secrets.NEOFS_WALLET }}
          NEOFS_WALLET_PASSWORD: ${{ secrets.NEOFS_WALLET_PASSWORD }}
          NEOFS_NETWORK_DOMAIN: ${{ vars.NEOFS_NETWORK_DOMAIN }}
          NEOFS_HTTP_GATE: ${{ vars.NEOFS_HTTP_GATE }}
          STORE_OBJECTS_CID: ${{ vars.STORE_OBJECTS_CID }}
          PATH_TO_FILES_DIR: send.fs.neo.org
          STRIP_PREFIX: true
          REPLACE_CONTAINER_CONTENTS: true
